// –ò–º–ø–æ—Ä—Ç –º–æ–¥—É–ª–µ–π
import {
    charactersData,
    showsData,
    masterClassesData,
    reviewPhotosData,
    packagesData
} from './modules/data.js';

import {
    appState,
    updateSelection,
    resetSelection,
    calculateTotalPrice
} from './modules/state.js';

import {
    showNotification,
    formatPhone,
    initIntersectionObserver,
    initSmoothScroll
} from './modules/ui.js';

import {
    submitBooking,
    submitCharacterRequest
} from './modules/api.js';

// –ò–º–ø–æ—Ä—Ç –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
import { initHeader } from './components/header.js';
import { initHero } from './components/hero.js';
import { initAbout } from './components/about.js';
import { initPackages } from './components/packages.js';
import { initSelection } from './components/selection.js';
import { initReviews } from './components/reviews.js';
import { initProducts } from './components/products.js';
import { initContact } from './components/contact.js';
import { initModals } from './components/modals.js';

// –ò–º–ø–æ—Ä—Ç —Ñ—É–Ω–∫—Ü–∏–π –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –ø–∞–∫–µ—Ç–∞–º–∏
import {
    removePackage,
    removeSelectedItem,
    getPackageName
} from './components/packages.js';

// –ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
class App {
    constructor() {
        this.state = appState;
        this.data = {
            characters: charactersData,
            shows: showsData,
            masterClasses: masterClassesData,
            reviews: reviewPhotosData,
            packages: packagesData,
            customPrices: {
                character: 2500,
                show: 3000,
                master: 2000,
                products: {
                    photo: 1500,
                    decor: 2000,
                    pinata: 1000
                }
            }
        };
        this.init();
    }

    init() {
        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –æ–±—â–∏—Ö —É—Ç–∏–ª–∏—Ç
        initSmoothScroll();
        initIntersectionObserver();

        // –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–æ–≤
        initHeader();
        initHero();
        initAbout();
        initPackages(this);
        initSelection(this);
        initReviews(this);
        initProducts(this);
        initContact(this);
        initModals(this);

        // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏
        this.initGlobalHandlers();

        console.log('App initialized successfully');
    }

    initGlobalHandlers() {
        // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ —Å–æ–±—ã—Ç–∏–π
        document.addEventListener('selectionUpdated', () => {
            this.updateUI();
        });
    }

    updateUI() {
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å—á–µ—Ç—á–∏–∫–æ–≤
        const charactersCount = document.getElementById('characters-count');
        const showsCount = document.getElementById('shows-count');
        const masterCount = document.getElementById('master-count');
        const totalPrice = document.getElementById('total-price');

        if (charactersCount) {
            charactersCount.textContent = this.state.selectedCharacters.length;
        }
        if (showsCount) {
            showsCount.textContent = this.state.selectedShows.length;
        }
        if (masterCount) {
            masterCount.textContent = this.state.selectedMasterClasses.length;
        }
        if (totalPrice) {
            totalPrice.textContent = calculateTotalPrice(this.state).toLocaleString('ru-RU');
        }

        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ preview
        this.updateSelectedServicesPreview();
    }

    updateSelectedServicesPreview() {
        const preview = document.getElementById('selected-services');
        if (!preview) return;

        let html = '<h4>–í—ã–±—Ä–∞–Ω–Ω—ã–µ —É—Å–ª—É–≥–∏:</h4><div class="selected-items-preview">';

        // –ü–∞–∫–µ—Ç
        if (this.state.currentPackage) {
            html += `
            <div class="selected-item-card">
                <div class="selected-item-img" style="background: rgba(214, 196, 155, 0.2); display: flex; align-items: center; justify-content: center;">
                    <span style="font-size: 2rem;">üì¶</span>
                </div>
                <div class="selected-item-name">${getPackageName(this.state.currentPackage)}</div>
                <div class="remove-item-btn" onclick="app.removePackage()">√ó</div>
            </div>
        `;
        }

        // –ü–µ—Ä—Å–æ–Ω–∞–∂–∏
        this.state.selectedCharacters.forEach(char => {
            const character = this.data.characters.find(c => c.name === char.name);
            if (character) {
                html += `
                <div class="selected-item-card">
                    <img src="${character.image}" alt="${char.name}" class="selected-item-img">
                    <div class="selected-item-name">${char.name}</div>
                    ${this.state.currentPackage === 'custom' ? `<div class="price-tag">${this.data.customPrices.character}‚ÇΩ</div>` : ''}
                    <div class="remove-item-btn" onclick="app.removeSelectedItem('character', '${char.name}')">√ó</div>
                </div>
            `;
            }
        });

        // –®–æ—É-–ø—Ä–æ–≥—Ä–∞–º–º—ã
        this.state.selectedShows.forEach(show => {
            const showData = this.data.shows.find(s => s.name === show.name);
            if (showData) {
                html += `
                <div class="selected-item-card">
                    <img src="${showData.image}" alt="${show.name}" class="selected-item-img">
                    <div class="selected-item-name">${show.name}</div>
                    ${this.state.currentPackage === 'custom' ? `<div class="price-tag">${this.data.customPrices.show}‚ÇΩ</div>` : ''}
                    <div class="remove-item-btn" onclick="app.removeSelectedItem('show', '${show.name}')">√ó</div>
                </div>
            `;
            }
        });

        // –ú–∞—Å—Ç–µ—Ä-–∫–ª–∞—Å—Å—ã
        this.state.selectedMasterClasses.forEach(master => {
            const masterData = this.data.masterClasses.find(m => m.name === master.name);
            if (masterData) {
                html += `
                <div class="selected-item-card">
                    <div class="selected-item-img" style="background: rgba(214, 196, 155, 0.2); display: flex; align-items: center; justify-content: center; font-size: 2rem;">
                        ${masterData.icon || 'üé®'}
                    </div>
                    <div class="selected-item-name">${master.name}</div>
                    ${this.state.currentPackage === 'custom' ? `<div class="price-tag">${this.data.customPrices.master}‚ÇΩ</div>` : ''}
                    <div class="remove-item-btn" onclick="app.removeSelectedItem('master', '${master.name}')">√ó</div>
                </div>
            `;
            }
        });

        // –¢–æ–≤–∞—Ä—ã
        this.state.selectedProducts.forEach(prod => {
            let price = prod.price;
            let icon = 'üéÅ';

            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–∫–æ–Ω–∫—É –¥–ª—è —Ç–æ–≤–∞—Ä–∞
            if (prod.id === 'photo') icon = 'üì∏';
            else if (prod.id === 'decor') icon = 'üéà';
            else if (prod.id === 'pinata') icon = 'ü™Ö';

            // –ö–∞—Å—Ç–æ–º–Ω–∞—è —Ü–µ–Ω–∞ –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–∞–∫–µ—Ç–∞
            if (this.state.currentPackage === 'custom') {
                if (prod.id === 'photo') price = this.data.customPrices.products.photo;
                else if (prod.id === 'decor') price = this.data.customPrices.products.decor;
                else if (prod.id === 'pinata') price = this.data.customPrices.products.pinata;
            }

            html += `
            <div class="selected-item-card">
                <div class="selected-item-img" style="background: rgba(214, 196, 155, 0.2); display: flex; align-items: center; justify-content: center;">
                    <span style="font-size: 2rem;">${icon}</span>
                </div>
                <div class="selected-item-name">${prod.name}</div>
                ${this.state.currentPackage === 'custom' ? `<div class="price-tag">${price}‚ÇΩ</div>` : ''}
                <div class="remove-item-btn" onclick="app.removeSelectedItem('product', '${prod.id}')">√ó</div>
            </div>
        `;
        });

        // –î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ —É—Å–ª—É–≥–∏
        this.state.selectedAdditionalServices.forEach(serv => {
            let price = serv.price;
            let icon = 'üç∞';

            // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –∏–∫–æ–Ω–∫—É –¥–ª—è —É—Å–ª—É–≥–∏
            if (serv.id === 'photographer') icon = 'üì∑';
            else if (serv.id === 'pinata') icon = 'ü™Ö';
            else if (serv.id === 'cake') icon = 'üéÇ';

            // –ö–∞—Å—Ç–æ–º–Ω–∞—è —Ü–µ–Ω–∞ –¥–ª—è –∫–∞—Å—Ç–æ–º–Ω–æ–≥–æ –ø–∞–∫–µ—Ç–∞
            if (this.state.currentPackage === 'custom') {
                if (serv.id === 'photographer') price = this.data.customPrices.products.photo;
                else if (serv.id === 'pinata') price = this.data.customPrices.products.pinata;
                else if (serv.id === 'cake') price = 0;
            }

            html += `
            <div class="selected-item-card">
                <div class="selected-item-img" style="background: rgba(214, 196, 155, 0.2); display: flex; align-items: center; justify-content: center;">
                    <span style="font-size: 2rem;">${icon}</span>
                </div>
                <div class="selected-item-name">${serv.name}</div>
                ${this.state.currentPackage === 'custom' && price > 0 ? `<div class="price-tag">${price}‚ÇΩ</div>` : ''}
                <div class="remove-item-btn" onclick="app.removeSelectedItem('additional', '${serv.id}')">√ó</div>
            </div>
        `;
        });

        html += '</div>';
        preview.innerHTML = html;
    }

    // –ú–µ—Ç–æ–¥—ã-–æ–±–µ—Ä—Ç–∫–∏ –¥–ª—è –≤—ã–∑–æ–≤–∞ –∏–∑ HTML
    removePackage() {
        removePackage(this);
        this.updateSelectedServicesPreview();
    }

    removeSelectedItem(type, identifier) {
        removeSelectedItem(this, type, identifier);
        this.updateSelectedServicesPreview();
    }

    // –ì–µ—Ç—Ç–µ—Ä—ã –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –¥–∞–Ω–Ω—ã–º
    get characters() { return charactersData; }
    get shows() { return showsData; }
    get masterClasses() { return masterClassesData; }
    get reviews() { return reviewPhotosData; }
    get packages() { return packagesData; }
}

// –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
document.addEventListener('DOMContentLoaded', () => {
    window.app = new App();
});

// –≠–∫—Å–ø–æ—Ä—Ç –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è –≤ –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞—Ö
export {
    charactersData,
    showsData,
    masterClassesData,
    reviewPhotosData,
    packagesData,
    showNotification,
    formatPhone,
    submitBooking,
    submitCharacterRequest,
    updateSelection,
    resetSelection,
    calculateTotalPrice
};