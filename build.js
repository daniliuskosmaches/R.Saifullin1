import fs from 'fs';
import { fileURLToPath } from 'url';
import { dirname, join } from 'path';

const __filename = fileURLToPath(import.meta.url);
const __dirname = dirname(__filename);

function build() {
    console.log('üöÄ Starting build process...');

    const buildDir = join(__dirname, 'build');

    // –û—á–∏—â–∞–µ–º –ø–∞–ø–∫—É –±–∏–ª–¥–∞
    if (fs.existsSync(buildDir)) {
        console.log('üìÅ Cleaning build directory...');
        fs.rmSync(buildDir, { recursive: true });
    }

    // –°–æ–∑–¥–∞–µ–º –ø–∞–ø–∫—É –±–∏–ª–¥–∞
    fs.mkdirSync(buildDir, { recursive: true });
    console.log('‚úÖ Build directory created');

    // –§—É–Ω–∫—Ü–∏—è –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤/–ø–∞–ø–æ–∫
    const copy = (src, dest) => {
        if (fs.statSync(src).isDirectory()) {
            fs.mkdirSync(dest, { recursive: true });
            const files = fs.readdirSync(src);
            files.forEach(file => {
                copy(join(src, file), join(dest, file));
            });
        } else {
            fs.copyFileSync(src, dest);
            console.log(`üìÑ Copied: ${src} -> ${dest}`);
        }
    };

    // –ö–æ–ø–∏—Ä—É–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ —Ñ–∞–π–ª—ã
    console.log('üì¶ Copying files...');
    copy('index.html', join(buildDir, 'index.html'));
    copy('css', join(buildDir, 'css'));
    copy('js', join(buildDir, 'js'));
    copy('images', join(buildDir, 'images'));

    // –°–æ–∑–¥–∞–µ–º .static —Ñ–∞–π–ª –¥–ª—è Render (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ)
    fs.writeFileSync(join(buildDir, '.static'), '');

    console.log('üéâ Build completed successfully!');
    console.log('üìÅ Build files are in: ', buildDir);
}

build();